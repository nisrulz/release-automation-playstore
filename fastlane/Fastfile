#!/usr/bin/env ruby -w

# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# Opt out of sending analytics data about usage to fastlane servers
opt_out_usage

# ============= Lanes ================

platform :android do
  # ====================== fetch_metadata ======================
  desc "Download and overwrite metadata"
  lane :fetch_metadata do
    METADATA_PATH = "./metadata/"
    sh "rm -rf " + METADATA_PATH
    sh "fastlane supply init -m " + METADATA_PATH
  end

  # ====================== update_metadata ======================
  desc "Update metadata for the application on Google Play Store"
  lane :update_metadata do
    deploymentTrack = "production"
    version_code = get_version_from_google_playstore(deploymentTrack)

    # Enable uploading on metadata and changelog
    upload_metadata = true

    upload_to_play_store(
      skip_upload_apk: true,
      skip_upload_aab: true,
      track: deploymentTrack,
      version_code: version_code,
      release_status: "draft",
      timeout: 3600,
      metadata_path: "fastlane/metadata/",
      skip_upload_metadata: !upload_metadata,
      skip_upload_changelogs: !upload_metadata,
      skip_upload_screenshots: upload_metadata,
      skip_upload_images: upload_metadata,
      validate_only: false,
    )
    puts "Android update_metadata lane completed ✅"
  end

  # ====================== update_screenshots ======================
  desc "Update screenshots for the application on Google Play Store"
  lane :update_screenshots do
    deploymentTrack = "production"
    version_code = get_version_from_google_playstore(deploymentTrack)

    # Enable uploading screenshots and images
    upload_screenshots = true

    upload_to_play_store(
      skip_upload_apk: true,
      skip_upload_aab: true,
      track: deploymentTrack,
      version_code: version_code,
      release_status: "draft",
      timeout: 3600,
      metadata_path: "fastlane/metadata/",
      skip_upload_metadata: upload_screenshots,
      skip_upload_changelogs: upload_screenshots,
      skip_upload_screenshots: !upload_screenshots,
      skip_upload_images: !upload_screenshots,
      validate_only: false,
    )
    puts "Android update_screenshots lane completed ✅"
  end
end

# ------------------------------ Utils ------------------------------
def get_version_from_google_playstore(deploymentTrack)
  versions = google_play_track_version_codes(track: deploymentTrack)
  return versions[0]
end
